@model Finanzas.ViewModels.HorarioPersonaViewModel

@{
    ViewBag.Title = "Crear Horario";
}

<h2>Crear</h2>
<h3>Horario</h3>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Home")">Inicio</a></li>
    <li><a href="@Url.Action("Index")">Horarios</a></li>
    <li class="active">Crear</li>
</ol>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PersonaId, "Persona", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownList("PersonaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioRubroId, "Rubro", htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownList("HorarioRubroId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HorarioRubroId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6">
                <div class='input-group date' id='fecha'>
                    @Html.EditorFor(model => model.sFecha, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.sFecha, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6">
                <div class='input-group date' id='hora'>
                    @Html.EditorFor(model => model.sHora, new { htmlAttributes = new { @class = "form-control", @placeholder = "HH:mm" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-time"></span>
                    </span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.sHora, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duracion, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6">
                <div class='input-group'>
                    @Html.EditorFor(model => model.Duracion, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        min
                    </span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Duracion, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary raised-button  btn-round waves-effect"><span class="icon-plus"></span> Crear</button>
            </div>
        </div>
    </div>
}
<div>
    <a href="@Url.Action("Index")" class="btn btn-success raised-button  btn-round waves-effect"> <span class="icon-arrow-left"></span> Volver a lista</a>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/HorarioPersonalJS.js"></script>
}
