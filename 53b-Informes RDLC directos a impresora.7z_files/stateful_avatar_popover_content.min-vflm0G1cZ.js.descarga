define(["require","exports","tslib","react"],function(t,e,a,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=(function(t){function e(e){var a=t.call(this,e)||this;a.getStateFromDataStore=function(){var t=a.props,e=t.dataStore,n=t.targetUser;return{calendarFetchEventsState:e.getCalendarFetchEventsState(n.account_id),isLoading:"loading"===e.getLoadingState(n.account_id)}},a.listener=function(){a.setState(a.getStateFromDataStore())};var n=e.dataStore,r=e.targetUser;return a.state={calendarFetchEventsState:n.getCalendarFetchEventsState(r.account_id)},a}return a.__extends(e,t),e.prototype.componentDidMount=function(){var t=this.props,e=t.dataStore,a=t.targetUser;e.addListener(a.account_id,this.listener),void 0===this.state.calendarFetchEventsState&&this.updateCalendarState(a.account_id),this._updateChat()},e.prototype.componentWillUnmount=function(){this.props.dataStore.removeListener(this.props.targetUser.account_id)},e.prototype._updateChat=function(){var t=this,e=this.props,a=e.dataStore,n=e.targetUser,r=e.onSendMessage,s=e.file;Promise.all([a.getSlackPermissionState(n.account_id),a.getZoomPermissiontState(n.account_id)]).then(function(e){var a=e[0],o=e[1],i=a.granted_permissions.filter(function(t){return"chat"===t[".tag"]}).length>0,c=i?function(){r("slack",{targetUser:n,file:s})}:void 0,d=0===o.granted_permissions.length?void 0:function(){r("zoom",{targetUser:n,file:s})};t.setState({chatProps:{onSlackMessageClick:c,onZoomMessageClick:d}})})},e.prototype.updateCalendarState=function(t){this.props.dataStore.makeCalendarFetchEventsRequest(t,{account_ids:[t],range_start_time:Date.now(),range_end_time:Date.now()+12096e5})},e.prototype.getCalendarEventProps=function(t){if(void 0===this.state.calendarFetchEventsState)return{calendarEvents:void 0};if("loading"===this.state.calendarFetchEventsState)return{calendarEvents:"loading"};if("error"===this.state.calendarFetchEventsState)return{calendarEvents:"error"};var e=this.state.calendarFetchEventsState.event_mapping;return 0===e[t].length?{calendarEvents:"empty"}:{calendarEvents:e[t]}},e.prototype.render=function(){var t=void 0===this.state.calendarFetchEventsState||"loading"===this.state.calendarFetchEventsState||this.state.isLoading;return n.createElement(this.props.avatarPopoverContentClass,{seenStateElement:this.props.seenStateElement,calendarEventProps:this.getCalendarEventProps(this.props.targetUser.account_id),chatProps:this.state.chatProps,isLoading:t})},e})(n.Component);e.StatefulAvatarPopoverContent=r});
//# sourceMappingURL=stateful_avatar_popover_content.min.js-vflO8ZOlW.map